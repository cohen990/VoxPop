@using Site.Models
@using Site.Services
<script src="~/Scripts/percent-tooltips.js"></script>

@model IEnumerable<Site.Storage.Models.BlogPostEntity>
@{
    if (@Model.Select(x => x.Author).Count() != 0)
    {
        ViewBag.Title = @Model.First().Author;
    }
    else
    {
        ViewBag.Title = "Author Stories";
    }
    var authorUN = Request.QueryString["AuthUn"];
    var author = Request.QueryString["Auth"];
}

@section MetaTags
{
    @if (@Model.Select(x => x.Author).Count() != 0)
    {
        @Html.Partial("_MetaTags", new MetaTagModel
        {
            Description = "Stories by " + @Model.First().Author,
            Title = "Got questions? Get Answers.",
            ImageUri = Model.First().ImageUri
        })
    }
}

@if (@Model.Select(x => x.Author).Count() != 0)
{
    <h1 class="page-headings">Stories by<strong class="author-stories-names"> @Model.First().Author</strong></h1>


    foreach (var blogPost in Model)
    {
        <script>
            chartData = [];
            VoxPopCharts.InitializeChart();
        </script>
        <div class="index-links">
            <a href="~/Stories/@blogPost.PartitionKey/@blogPost.RowKey">
                <img src="@blogPost.ImageUri" class="index-pic">
                <div class="index-chart">
                    <canvas class="index-chart-canvas" id="@blogPost.RowKey@blogPost.PartitionKey" height="240" width="330"></canvas>
                </div>
                <div class="index-titles line-clamp">
                    @blogPost.Title
                </div>
            </a>
        </div>
        foreach (var pollItem in blogPost.Poll)
        {
            string option = HttpUtility.UrlDecode(@pollItem.Key);
            <script>
                chartData.push(VoxPopCharts.GetPollData("@option", @pollItem.Value));
            </script>
        }
        <script>
            VoxPopCharts.GenerateChart("@blogPost.RowKey@blogPost.PartitionKey", chartData);
            var numPoll;
        </script>
    }
}
else if (authorUN == ClaimsService.GetClaim(VoxPopConstants.IdentifierClaimKey))
{
    <h1 class="page-headings">Stories by...</h1>

    <div class="author-stories-intro">
        <p>You haven't written any Stories on VOXPOP. Feel you creative juices flowing...? Great! @Html.ActionLink("Get cracking", "Create"). If you're not up to it quite yet why don't you have a @Html.ActionLink("browse through and Vote", "Index") on the latest Stories.</p>
    </div>
}
else
{
    <h1 class="page-headings">Stories by @author</h1>

    <div class="author-stories-intro">
        <p>@author hasn't written any Stories on VOXPOP just yet. Why not have a @Html.ActionLink("browse through and Vote", "Index") on the latest Stories.</p>
    </div>

}

