@model Site.Models.BlogModel
@{
    ViewBag.Title = "Story";
}

<script src="~/Scripts/modally-baby.js"></script>
<script>
    var chartData = [];
</script>

<div class="story-outer-width">
    <div class="story-author-date-box">
        <p class="story-author">by @Html.ActionLink(@Model.Author, "AuthorStories", new { authID = @Model.AuthorIdentifier, auth = @Model.Author }, null)</p>
        <p class="story-date"> @Model.TimeCreated.ToString("D")</p>
    </div>
    <div class="story-width">
        <h1 class="story-headings">@Model.Title</h1>
        <img src="@Model.ImageUri" class="story-pic">
        <div>
            <div class="story-chart-box">
                <div>
                    <canvas class="story-chart" id="storyChart" height="350" width="350"></canvas>
                </div>
                <div class="story-votebuttons">
                    <h2 class="story-votebuttons-title">Vote</h2>
                    @if (Model.Poll.Count > 4)
                    {

                        for (int i = 0; i < 4; i++)
                        {
                            var poll = Model.Poll.ElementAt(i);
                            <h4 class="story-votebuttons-option">@poll.Key&nbsp:</h4>
                            <span class="story-votebuttons-value">@poll.Value</span>
                            using (Html.BeginForm("Vote", "Stories"))
                            {
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="pollItemKey" value="@poll.Key">
                                <input type="hidden" name="blogPostPartitionKey" value="@Model.AuthorIdentifier">
                                <input type="hidden" name="blogPostRowKey" value="@Model.BlogIdentifier">
                                <input type="hidden" name="returnUrl" value="/Stories/@Model.AuthorIdentifier/@Model.BlogIdentifier">
                                <input class="story-votebuttons-button" type="submit" value="+1">
                            }
                        }
                        <a class="story-votebuttons-exta trigger" href="javascript:;">More Voting Options...</a>

                        foreach (var poll in Model.Poll)
                        {
                            <script>
                                chartData.push(VoxPopCharts.GetPollData("@poll.Key", @poll.Value));
                                var numPoll = @Model.Poll.Count;
                            </script>
                        }
                    }
                    else
                    {
                        foreach (var pollItem in Model.Poll)
                        {
                            <h4 class="story-votebuttons-option">@pollItem.Key&nbsp:</h4>
                            <span class="story-votebuttons-value">@pollItem.Value</span>
                            using (Html.BeginForm("Vote", "Stories"))
                            {
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="pollItemKey" value="@pollItem.Key">
                                <input type="hidden" name="blogPostPartitionKey" value="@Model.AuthorIdentifier">
                                <input type="hidden" name="blogPostRowKey" value="@Model.BlogIdentifier">
                                <input type="hidden" name="returnUrl" value="/Stories/@Model.AuthorIdentifier/@Model.BlogIdentifier">
                                <input class="story-votebuttons-button" type="submit" value="+1">
                            }
                            <script>
                                chartData.push(VoxPopCharts.GetPollData("@pollItem.Key", @pollItem.Value));
                                var numPoll = @Model.Poll.Count;
                            </script>
                        }
                    }
                </div>
            </div>
        </div>
        <p class="story-pic-caption">@Model.ImageCaption</p>
        <div class="story-content">
            @Html.Raw(Model.Content)
        </div>
        @if ((Request.IsAuthenticated) && (Site.Services.ClaimsService.GetClaim(VoxPopConstants.IdentifierClaimKey) == @Model.AuthorIdentifier))
        {
            <a href="~/Stories/Edit/@Model.AuthorIdentifier/@Model.BlogIdentifier">Edit this Story</a>
        }
    </div>
</div>

<script>
    VoxPopCharts.GenerateChart("storyChart", chartData);
</script>

@Html.Partial("_ModalVoteWindow", @Model)