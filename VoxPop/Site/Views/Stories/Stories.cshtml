@using Site.Models
@using Site.Services
@model BlogModel
@{
    ViewBag.Title = "Story";
}

@section MetaTags
{
    @Html.Partial("_MetaTags", new MetaTagModel { Description = Model.Content.StripHtmlTags(), Title = Model.Title, ImageUri = Model.ImageUri })
}

<script src="~/Scripts/modally-baby.js"></script>
<script>
    var chartData = [];
</script>

<h1 class="story-headings">@Model.Title</h1>

<div class="story-outer-width">
    <div class="story-author-date-box">
        <p class="story-author">by @Html.ActionLink(@Model.Author, "AuthorStories", new { authID = @Model.AuthorIdentifier, auth = @Model.Author }, null)</p>
        <p class="story-date"> @Model.TimeCreated.ToString("D")</p>
    </div>
    <div class="story-width">
        <img src="@Model.ImageUri" class="story-pic">
        <div>
            <div class="story-chart-box">
                <div class="story-chart">
                    <canvas class="story-chart-canvas" id="storyChart" height="345" width="666"></canvas>
                </div>
                <div id="story-votebuttons" class="story-votebuttons">
                    <h2 class="story-votebuttons-title">Vote</h2>
                    @{int count = 0;}
                    @if (Model.Poll.Count > 4)
                    {

                        for (int i = 0; i < 4; i++)
                        {
                            count++;
                            var poll = Model.Poll.ElementAt(i);
                            <div class="story-votebuttons-box-@count">
                                <h4 class="story-votebuttons-option">@poll.Key&nbsp:</h4>
                                <span class="story-votebuttons-value">@poll.Value</span>
                                @using (Html.BeginForm("Vote", "Stories"))
                                {
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="pollItemKey" value="@poll.Key">
                                    <input type="hidden" name="blogPostPartitionKey" value="@Model.AuthorIdentifier">
                                    <input type="hidden" name="blogPostRowKey" value="@Model.BlogIdentifier">
                                    <input type="hidden" name="returnUrl" value="/Stories/@Model.AuthorIdentifier/@Model.BlogIdentifier">
                                    <input class="story-votebuttons-button" type="submit" value="+1">
                                }
                            </div>
                        }
                        <a class="story-votebuttons-exta trigger" href="javascript:;">More Voting Options...</a>

                        foreach (var poll in Model.Poll)
                        {
                            <script>
                                chartData.push(VoxPopCharts.GetPollData("@poll.Key", @poll.Value));
                                var numPoll = @Model.Poll.Count;
                            </script>
                        }
                    }
                    else
                    {
                        foreach (var pollItem in Model.Poll)
                        {
                            count++;
                            <div class="story-votebuttons-box">

                                <div class="story-votebuttons-box-@count">
                                    <h4 class="story-votebuttons-option">@pollItem.Key&nbsp:</h4>
                                    <span class="story-votebuttons-value">@pollItem.Value</span>
                                    @using (Html.BeginForm("Vote", "Stories"))
                                    {
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="pollItemKey" value="@pollItem.Key">
                                        <input type="hidden" name="blogPostPartitionKey" value="@Model.AuthorIdentifier">
                                        <input type="hidden" name="blogPostRowKey" value="@Model.BlogIdentifier">
                                        <input type="hidden" name="returnUrl" value="/Stories/@Model.AuthorIdentifier/@Model.BlogIdentifier">
                                        <input class="story-votebuttons-button" type="submit" value="+1">
                                    }
                                    <script>
                                        chartData.push(VoxPopCharts.GetPollData("@pollItem.Key", @pollItem.Value));
                                        var numPoll = @Model.Poll.Count;
                                    </script>
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
        <p class="story-pic-caption">@Model.ImageCaption</p>
        <div class="story-content">
            @Html.Raw(Model.Content)
        </div>
        @if ((Request.IsAuthenticated) && (Site.Services.ClaimsService.GetClaim(VoxPopConstants.IdentifierClaimKey) == @Model.AuthorIdentifier))
        {
            <a href="~/Stories/Edit/@Model.AuthorIdentifier/@Model.BlogIdentifier">Edit your Story</a>
        }
    </div>
</div>

<script>
    VoxPopCharts.GenerateChart("storyChart", chartData);
    VoxPopCharts.InitializeButtons();
</script>

@Html.Partial("_ModalVoteWindow", @Model)